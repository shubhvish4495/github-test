name: Relay Service - Basic Repo Check

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - "**"

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go 1.23.4
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.4

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Linter
        run: |
          make lint
        continue-on-error: true

      - name: Build Project
        run: make build

      - name: Run Tests with Coverage
        run: go test -v -coverprofile=coverage.out ./...

      # - name: Upload Coverage Report
      #   uses: codecov/codecov-action@v4
      #   with:
      #     file: coverage.out
      #     flags: unittests
      #     name: go-code-coverage
      #     fail_ci_if_error: true
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security-check:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [build-test]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go 1.23.4
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.4

      - name: Install Govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Run Vulnerability Scan
        run: govulncheck ./...

  deploy-k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [security-check]
    if: github.ref == 'refs/heads/main'  # Deploy only on main branch push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure Kubernetes Context
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/your-app-name

      - name: Clean Up Kubeconfig
        run: rm -f kubeconfig.yaml
